/*
 * Copyright (c) 2019 The Language Applications Grid
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.lappsgrid.service.validator


import groovy.json.JsonOutput
import groovy.json.JsonSlurper
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.Response
import org.lappsgrid.client.ServiceClient
import org.lappsgrid.discriminator.Discriminators
import org.lappsgrid.metadata.ServiceMetadata
import org.lappsgrid.serialization.Data
import org.lappsgrid.serialization.Serializer
import org.lappsgrid.service.validator.commands.*
import picocli.CommandLine
import picocli.CommandLine.Command
import picocli.CommandLine.Option

/**
 * Command line program used to test and verify Lappsgrid online services.
 *
 * ASCII art header generated by http://www.patorjk.com/software/taag/#p=display&f=Slant&t=Lappsgrid
 */
@Command(name="service-validator",
        description="Validates services by sending a document with required annotation types and verifying that the expected annotations are produced.",
        sortOptions = false,
        mixinStandardHelpOptions = true,
        versionProvider = VersionProvider,
        descriptionHeading = "%n@|bold Description|@%n",
        optionListHeading = "%n@|bold Options|@%n",
        commandListHeading = "%n@|bold Commands|@%n",
        footer = """ 
Run @|bold service-validator COMMAND --help|@ to get help for a sub-command.
    
Copyright(c) 2019 The Language Applications Grid 
        """,
        subcommands = [ListCommand, UpdateCommand, TestCommand, CleanCommand],
        header = """
    __                                      _     __
   / /   ____ _____  ____  _________ ______(_)___/ /
  / /   / __ `/ __ \\/ __ \\/ ___/ __ `/ ___/ / __  / 
 / /___/ /_/ / /_/ / /_/ (__  ) /_/ / /  / / /_/ /  
/_____/\\__,_/ .___/ .___/____/\\__, /_/  /_/\\__,_/   
           /_/   /_/         /____/                 
"""
)
class ServicesValidator implements Runnable {

    static final ServicesValidator INSTANCE = new ServicesValidator()

    @Option(names = ['-d', '--cache-dir'], description = "Directory where data will be written. Default is ~/.lappsgrid", required = false, paramLabel = "directory")
    File destination

    ServicesValidator() { }

    void run() {
        // Validate input that Picocli can't
        if (!destination.exists()) {
            println "Destination directory does not exist."
            return
        }
        println "Is this even called anymore..."
    }

    File getDestination() {
        if (destination) {
            return destination
        }

        String home = System.getenv("HOME")
        File directory
        if (home) {
            directory = new File(home, ".lappsgrid")
        }
        else {
            directory = new File(".lappsgrid")
        }
        if (!directory.exists()) {
            directory.mkdirs()
        }
        return directory

    }

    static String uri(String type) {
        return "http://vocab.lappsgrid.org/$type"
    }

    static void main(String[] args) {
        CommandLine.run(INSTANCE, args)
    }
}
